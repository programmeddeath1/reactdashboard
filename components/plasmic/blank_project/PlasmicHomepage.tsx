// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 2xEr56CCGZxjvi9cuprFVo
// Component: ChI_jCU50nXr
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: 2xEr56CCGZxjvi9cuprFVo/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: ChI_jCU50nXr/css

import BgIcon from "./icons/PlasmicIcon__Bg"; // plasmic-import: cV_8TWEhhA/icon
import PlusIcon from "./icons/PlasmicIcon__Plus"; // plasmic-import: zgRWDNyDcF/icon
import DividerLineHorizontalIcon from "./icons/PlasmicIcon__DividerLineHorizontal"; // plasmic-import: OIXIxvKub5/icon
import DividerGraphHorizontalIcon from "./icons/PlasmicIcon__DividerGraphHorizontal"; // plasmic-import: JTPi4-7va/icon
import DividerGraphHorizontal2Icon from "./icons/PlasmicIcon__DividerGraphHorizontal2"; // plasmic-import: YKDGJd7ujX/icon
import DividerGraphVerticalIcon from "./icons/PlasmicIcon__DividerGraphVertical"; // plasmic-import: dQ1vJ9CSpv/icon
import YesterdayGraphIcon from "./icons/PlasmicIcon__YesterdayGraph"; // plasmic-import: k5hxGu9jVI/icon
import TodayGraphIcon from "./icons/PlasmicIcon__TodayGraph"; // plasmic-import: G4Ukv0toqF/icon
import CirclePointer2Icon from "./icons/PlasmicIcon__CirclePointer2"; // plasmic-import: DtNawGRwJq/icon
import DividerLineVerticalIcon from "./icons/PlasmicIcon__DividerLineVertical"; // plasmic-import: z7HsWixDYb/icon
import DividerLineHorizontal2Icon from "./icons/PlasmicIcon__DividerLineHorizontal2"; // plasmic-import: 7MvlPnfw4o/icon
import ProfileCircleIcon from "./icons/PlasmicIcon__ProfileCircle"; // plasmic-import: tBYn4qVpNn/icon
import DividerLineVertical2Icon from "./icons/PlasmicIcon__DividerLineVertical2"; // plasmic-import: 8HoVDlT5Be/icon
import SearchIcon from "./icons/PlasmicIcon__Search"; // plasmic-import: lkrelid9roT/icon
import Sheet2Icon from "./icons/PlasmicIcon__Sheet2"; // plasmic-import: jxvM3bewR-U/icon
import IconSidebarInactive2TicketsIcon from "./icons/PlasmicIcon__IconSidebarInactive2Tickets"; // plasmic-import: RR2gChByeuU/icon
import IconSidebarInactive4ContactsIcon from "./icons/PlasmicIcon__IconSidebarInactive4Contacts"; // plasmic-import: 9ImDxqy3Myq/icon
import IconSidebarInactive5AgentsIcon from "./icons/PlasmicIcon__IconSidebarInactive5Agents"; // plasmic-import: PyPrdXsxzKs/icon
import IconSidebarInactive6ArticlesIcon from "./icons/PlasmicIcon__IconSidebarInactive6Articles"; // plasmic-import: jBcR8vILDEu/icon
import DividerLineHorizontal3Icon from "./icons/PlasmicIcon__DividerLineHorizontal3"; // plasmic-import: wzjCrNEJhi8/icon

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  _11Overview?: p.Flex<"div">;
  ticketsAndTasks?: p.Flex<"div">;
  tasks?: p.Flex<"div">;
  cardsDefault?: p.Flex<"div">;
  sheet?: p.Flex<"div">;
  buttonTextButtonPrimaryDefault?: p.Flex<"div">;
  taskCreate?: p.Flex<"div">;
  iconCreateInactive?: p.Flex<"div">;
  sheet2?: p.Flex<"div">;
  task2?: p.Flex<"div">;
  chipDefaultSuccess?: p.Flex<"div">;
  sheet3?: p.Flex<"div">;
  title?: p.Flex<"div">;
  title2?: p.Flex<"div">;
  task1?: p.Flex<"div">;
  chipDefaultWarning?: p.Flex<"div">;
  sheet4?: p.Flex<"div">;
  title3?: p.Flex<"div">;
  title4?: p.Flex<"div">;
  task3?: p.Flex<"div">;
  chipDefaultGray?: p.Flex<"div">;
  sheet5?: p.Flex<"div">;
  title5?: p.Flex<"div">;
  title6?: p.Flex<"div">;
  unresolvedTickets?: p.Flex<"div">;
  cardsDefault2?: p.Flex<"div">;
  sheet6?: p.Flex<"div">;
  buttonTextButtonPrimaryDefault2?: p.Flex<"div">;
  unresolvedTicket1?: p.Flex<"div">;
  unresolvedTicket2?: p.Flex<"div">;
  unresolvedTicket3?: p.Flex<"div">;
  unresolvedTicket4?: p.Flex<"div">;
  todaysTrends?: p.Flex<"div">;
  cardsDefault3?: p.Flex<"div">;
  sheet7?: p.Flex<"div">;
  graphHelp?: p.Flex<"div">;
  today?: p.Flex<"div">;
  yesterday?: p.Flex<"div">;
  fullGraph?: p.Flex<"div">;
  horizontalLines?: p.Flex<"div">;
  hours?: p.Flex<"div">;
  values?: p.Flex<"div">;
  graphicMain?: p.Flex<"div">;
  graphicMask?: p.Flex<"div">;
  pointer?: p.Flex<"div">;
  value?: p.Flex<"div">;
  pointerValue?: p.Flex<"div">;
  pointerValue2?: p.Flex<"div">;
  additionalInfo?: p.Flex<"div">;
  cards?: p.Flex<"div">;
  unresolved?: p.Flex<"div">;
  cardsDefault4?: p.Flex<"div">;
  sheet8?: p.Flex<"div">;
  open?: p.Flex<"div">;
  cardsDefault5?: p.Flex<"div">;
  sheet9?: p.Flex<"div">;
  open2?: p.Flex<"div">;
  cardsDefault6?: p.Flex<"div">;
  sheet10?: p.Flex<"div">;
  overdue?: p.Flex<"div">;
  cardsHover?: p.Flex<"div">;
  stroke?: p.Flex<"div">;
  sheet11?: p.Flex<"div">;
  iconCursorPointingHand?: p.Flex<"div">;
  headerDefault?: p.Flex<"div">;
  photo?: p.Flex<"div">;
  avatarManHeader?: p.Flex<"div">;
  mHeader?: p.Flex<"div">;
  name?: p.Flex<"div">;
  iconSearch?: p.Flex<"div">;
  title7?: p.Flex<"div">;
  sidebarDesktop?: p.Flex<"div">;
  sidebarListActive?: p.Flex<"div">;
  selected?: p.Flex<"div">;
  title8?: p.Flex<"div">;
  sidebarListInactive?: p.Flex<"div">;
  title9?: p.Flex<"div">;
  sidebarListInactive2?: p.Flex<"div">;
  title10?: p.Flex<"div">;
  sidebarListInactive3?: p.Flex<"div">;
  title11?: p.Flex<"div">;
  sidebarListInactive4?: p.Flex<"div">;
  title12?: p.Flex<"div">;
  sidebarListInactive5?: p.Flex<"div">;
  title13?: p.Flex<"div">;
  sidebarListInactive6?: p.Flex<"div">;
  title14?: p.Flex<"div">;
  sidebarListInactive7?: p.Flex<"div">;
  title15?: p.Flex<"div">;
};

export interface DefaultHomepageProps {}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const currentUser = p.useCurrentUser?.() || {};

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"_11Overview"}
            data-plasmic-override={overrides._11Overview}
            className={classNames(projectcss.all, sty._11Overview)}
          >
            <BgIcon
              className={classNames(projectcss.all, sty.svg___1Nokw)}
              role={"img"}
            />

            <div
              data-plasmic-name={"ticketsAndTasks"}
              data-plasmic-override={overrides.ticketsAndTasks}
              className={classNames(projectcss.all, sty.ticketsAndTasks)}
            >
              <div
                data-plasmic-name={"tasks"}
                data-plasmic-override={overrides.tasks}
                className={classNames(projectcss.all, sty.tasks)}
              >
                <div
                  data-plasmic-name={"cardsDefault"}
                  data-plasmic-override={overrides.cardsDefault}
                  className={classNames(projectcss.all, sty.cardsDefault)}
                >
                  <div
                    data-plasmic-name={"sheet"}
                    data-plasmic-override={overrides.sheet}
                    className={classNames(projectcss.all, sty.sheet)}
                  />
                </div>

                <div
                  data-plasmic-name={"buttonTextButtonPrimaryDefault"}
                  data-plasmic-override={
                    overrides.buttonTextButtonPrimaryDefault
                  }
                  className={classNames(
                    projectcss.all,
                    sty.buttonTextButtonPrimaryDefault
                  )}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aFqgd
                    )}
                  >
                    {"View all"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2CbBr
                  )}
                >
                  {"Tasks"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1KADw
                  )}
                >
                  {"Today"}
                </div>

                <div
                  data-plasmic-name={"taskCreate"}
                  data-plasmic-override={overrides.taskCreate}
                  className={classNames(projectcss.all, sty.taskCreate)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__urQqU
                    )}
                  >
                    {"Create new task"}
                  </div>

                  <div
                    data-plasmic-name={"iconCreateInactive"}
                    data-plasmic-override={overrides.iconCreateInactive}
                    className={classNames(
                      projectcss.all,
                      sty.iconCreateInactive
                    )}
                  >
                    <div
                      data-plasmic-name={"sheet2"}
                      data-plasmic-override={overrides.sheet2}
                      className={classNames(projectcss.all, sty.sheet2)}
                    />

                    <PlusIcon
                      className={classNames(projectcss.all, sty.svg__kwSj0)}
                      role={"img"}
                    />
                  </div>

                  <DividerLineHorizontalIcon
                    className={classNames(projectcss.all, sty.svg___4Yv)}
                    role={"img"}
                  />
                </div>

                <div
                  data-plasmic-name={"task2"}
                  data-plasmic-override={overrides.task2}
                  className={classNames(projectcss.all, sty.task2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rxhI
                    )}
                  >
                    {"Create new ticket example"}
                  </div>

                  <div
                    data-plasmic-name={"chipDefaultSuccess"}
                    data-plasmic-override={overrides.chipDefaultSuccess}
                    className={classNames(
                      projectcss.all,
                      sty.chipDefaultSuccess
                    )}
                  >
                    <div
                      data-plasmic-name={"sheet3"}
                      data-plasmic-override={overrides.sheet3}
                      className={classNames(projectcss.all, sty.sheet3)}
                    />

                    <div
                      data-plasmic-name={"title"}
                      data-plasmic-override={overrides.title}
                      className={classNames(projectcss.all, sty.title)}
                    >
                      <div
                        data-plasmic-name={"title2"}
                        data-plasmic-override={overrides.title2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.title2
                        )}
                      >
                        {"New"}
                      </div>
                    </div>
                  </div>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__pTfih)}
                    displayHeight={"20px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"20px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/controlsCheckboxInactive.svg",
                      fullWidth: 20,
                      fullHeight: 20,
                      aspectRatio: 1
                    }}
                  />

                  <DividerLineHorizontalIcon
                    className={classNames(projectcss.all, sty.svg__y4N6B)}
                    role={"img"}
                  />
                </div>

                <div
                  data-plasmic-name={"task1"}
                  data-plasmic-override={overrides.task1}
                  className={classNames(projectcss.all, sty.task1)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qtnoF
                    )}
                  >
                    {"Finish ticket update"}
                  </div>

                  <div
                    data-plasmic-name={"chipDefaultWarning"}
                    data-plasmic-override={overrides.chipDefaultWarning}
                    className={classNames(
                      projectcss.all,
                      sty.chipDefaultWarning
                    )}
                  >
                    <div
                      data-plasmic-name={"sheet4"}
                      data-plasmic-override={overrides.sheet4}
                      className={classNames(projectcss.all, sty.sheet4)}
                    />

                    <div
                      data-plasmic-name={"title3"}
                      data-plasmic-override={overrides.title3}
                      className={classNames(projectcss.all, sty.title3)}
                    >
                      <div
                        data-plasmic-name={"title4"}
                        data-plasmic-override={overrides.title4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.title4
                        )}
                      >
                        {"Urgent"}
                      </div>
                    </div>
                  </div>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__peror)}
                    displayHeight={"20px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"20px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/controlsCheckboxInactive2.svg",
                      fullWidth: 20,
                      fullHeight: 20,
                      aspectRatio: 1
                    }}
                  />

                  <DividerLineHorizontalIcon
                    className={classNames(projectcss.all, sty.svg__tghMb)}
                    role={"img"}
                  />
                </div>

                <div
                  data-plasmic-name={"task3"}
                  data-plasmic-override={overrides.task3}
                  className={classNames(projectcss.all, sty.task3)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zmKDq
                    )}
                  >
                    {"Update ticket report"}
                  </div>

                  <div
                    data-plasmic-name={"chipDefaultGray"}
                    data-plasmic-override={overrides.chipDefaultGray}
                    className={classNames(projectcss.all, sty.chipDefaultGray)}
                  >
                    <div
                      data-plasmic-name={"sheet5"}
                      data-plasmic-override={overrides.sheet5}
                      className={classNames(projectcss.all, sty.sheet5)}
                    />

                    <div
                      data-plasmic-name={"title5"}
                      data-plasmic-override={overrides.title5}
                      className={classNames(projectcss.all, sty.title5)}
                    >
                      <div
                        data-plasmic-name={"title6"}
                        data-plasmic-override={overrides.title6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.title6
                        )}
                      >
                        {"Default"}
                      </div>
                    </div>
                  </div>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__b2QbZ)}
                    displayHeight={"20px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"20px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/controlsCheckboxActive.svg",
                      fullWidth: 20,
                      fullHeight: 20,
                      aspectRatio: 1
                    }}
                  />
                </div>
              </div>

              <div
                data-plasmic-name={"unresolvedTickets"}
                data-plasmic-override={overrides.unresolvedTickets}
                className={classNames(projectcss.all, sty.unresolvedTickets)}
              >
                <div
                  data-plasmic-name={"cardsDefault2"}
                  data-plasmic-override={overrides.cardsDefault2}
                  className={classNames(projectcss.all, sty.cardsDefault2)}
                >
                  <div
                    data-plasmic-name={"sheet6"}
                    data-plasmic-override={overrides.sheet6}
                    className={classNames(projectcss.all, sty.sheet6)}
                  />
                </div>

                <div
                  data-plasmic-name={"buttonTextButtonPrimaryDefault2"}
                  data-plasmic-override={
                    overrides.buttonTextButtonPrimaryDefault2
                  }
                  className={classNames(
                    projectcss.all,
                    sty.buttonTextButtonPrimaryDefault2
                  )}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gPz2C
                    )}
                  >
                    {"View details"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2YgnH
                  )}
                >
                  {"Unresolved tickets"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nuffA
                  )}
                >
                  {"Group: Support"}
                </div>

                <div
                  data-plasmic-name={"unresolvedTicket1"}
                  data-plasmic-override={overrides.unresolvedTicket1}
                  className={classNames(projectcss.all, sty.unresolvedTicket1)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7HgAq
                    )}
                  >
                    {"Waiting on Feature Request"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__u4U8
                    )}
                  >
                    {"4238"}
                  </div>

                  <DividerLineHorizontalIcon
                    className={classNames(projectcss.all, sty.svg___0Md5C)}
                    role={"img"}
                  />
                </div>

                <div
                  data-plasmic-name={"unresolvedTicket2"}
                  data-plasmic-override={overrides.unresolvedTicket2}
                  className={classNames(projectcss.all, sty.unresolvedTicket2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__o9Arn
                    )}
                  >
                    {"Awaiting Customer Response"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cc3L
                    )}
                  >
                    {"1005"}
                  </div>

                  <DividerLineHorizontalIcon
                    className={classNames(projectcss.all, sty.svg__iWSe)}
                    role={"img"}
                  />
                </div>

                <div
                  data-plasmic-name={"unresolvedTicket3"}
                  data-plasmic-override={overrides.unresolvedTicket3}
                  className={classNames(projectcss.all, sty.unresolvedTicket3)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__duMt3
                    )}
                  >
                    {"Awaiting Developer Fix"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cPtRh
                    )}
                  >
                    {"914"}
                  </div>

                  <DividerLineHorizontalIcon
                    className={classNames(projectcss.all, sty.svg__nkMee)}
                    role={"img"}
                  />
                </div>

                <div
                  data-plasmic-name={"unresolvedTicket4"}
                  data-plasmic-override={overrides.unresolvedTicket4}
                  className={classNames(projectcss.all, sty.unresolvedTicket4)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___42Y6Y
                    )}
                  >
                    {"Pending"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kFo9R
                    )}
                  >
                    {"281"}
                  </div>
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"todaysTrends"}
              data-plasmic-override={overrides.todaysTrends}
              className={classNames(projectcss.all, sty.todaysTrends)}
            >
              <div
                data-plasmic-name={"cardsDefault3"}
                data-plasmic-override={overrides.cardsDefault3}
                className={classNames(projectcss.all, sty.cardsDefault3)}
              >
                <div
                  data-plasmic-name={"sheet7"}
                  data-plasmic-override={overrides.sheet7}
                  className={classNames(projectcss.all, sty.sheet7)}
                />
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__sfJhw
                )}
              >
                {"Today’s trends"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__jNo53
                )}
              >
                {"as of 25 May 2019, 09:41 PM"}
              </div>

              <div
                data-plasmic-name={"graphHelp"}
                data-plasmic-override={overrides.graphHelp}
                className={classNames(projectcss.all, sty.graphHelp)}
              >
                <div
                  data-plasmic-name={"today"}
                  data-plasmic-override={overrides.today}
                  className={classNames(projectcss.all, sty.today)}
                >
                  <DividerGraphHorizontalIcon
                    className={classNames(projectcss.all, sty.svg__nAggS)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xfr3K
                    )}
                  >
                    {"Today"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"yesterday"}
                  data-plasmic-override={overrides.yesterday}
                  className={classNames(projectcss.all, sty.yesterday)}
                >
                  <DividerGraphHorizontalIcon
                    className={classNames(projectcss.all, sty.svg___9ZrZz)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7B9Iz
                    )}
                  >
                    {"Yesterday"}
                  </div>
                </div>
              </div>

              <div
                data-plasmic-name={"fullGraph"}
                data-plasmic-override={overrides.fullGraph}
                className={classNames(projectcss.all, sty.fullGraph)}
              >
                <div
                  data-plasmic-name={"horizontalLines"}
                  data-plasmic-override={overrides.horizontalLines}
                  className={classNames(projectcss.all, sty.horizontalLines)}
                >
                  <DividerGraphHorizontal2Icon
                    className={classNames(projectcss.all, sty.svg___6Me2K)}
                    role={"img"}
                  />

                  <DividerGraphHorizontal2Icon
                    className={classNames(projectcss.all, sty.svg__gwRvM)}
                    role={"img"}
                  />

                  <DividerGraphHorizontal2Icon
                    className={classNames(projectcss.all, sty.svg__aa0Z5)}
                    role={"img"}
                  />

                  <DividerGraphHorizontal2Icon
                    className={classNames(projectcss.all, sty.svg__srYqh)}
                    role={"img"}
                  />

                  <DividerGraphHorizontal2Icon
                    className={classNames(projectcss.all, sty.svg__pMGh6)}
                    role={"img"}
                  />

                  <DividerGraphHorizontal2Icon
                    className={classNames(projectcss.all, sty.svg__sqGvy)}
                    role={"img"}
                  />

                  <DividerGraphHorizontal2Icon
                    className={classNames(projectcss.all, sty.svg__uIcu)}
                    role={"img"}
                  />
                </div>

                <DividerGraphVerticalIcon
                  className={classNames(projectcss.all, sty.svg__m91MP)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"hours"}
                  data-plasmic-override={overrides.hours}
                  className={classNames(projectcss.all, sty.hours)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jOl50
                    )}
                  >
                    {"0"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v51Ya
                    )}
                  >
                    {"1"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yeHGx
                    )}
                  >
                    {"2"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7Wud
                    )}
                  >
                    {"3"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pvf2Q
                    )}
                  >
                    {"4"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bI6Vj
                    )}
                  >
                    {"5"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dj7Dk
                    )}
                  >
                    {"6"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nfAre
                    )}
                  >
                    {"7"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mDn6B
                    )}
                  >
                    {"8"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iLoB
                    )}
                  >
                    {"9"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dmRNv
                    )}
                  >
                    {"10"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__afS37
                    )}
                  >
                    {"11"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___89TEu
                    )}
                  >
                    {"12"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ckrQo
                    )}
                  >
                    {"13"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__u8Mz0
                    )}
                  >
                    {"14"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ej0Wb
                    )}
                  >
                    {"15"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aKYhW
                    )}
                  >
                    {"16"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zQw3M
                    )}
                  >
                    {"17"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2A4Le
                    )}
                  >
                    {"18"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7Qtrl
                    )}
                  >
                    {"19"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5Rf8V
                    )}
                  >
                    {"20"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5SLth
                    )}
                  >
                    {"21"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hJBse
                    )}
                  >
                    {"22"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iypTr
                    )}
                  >
                    {"23"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"values"}
                  data-plasmic-override={overrides.values}
                  className={classNames(projectcss.all, sty.values)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2PLc
                    )}
                  >
                    {"0"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nEpk4
                    )}
                  >
                    {"10"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__g5YrV
                    )}
                  >
                    {"20"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kTtjw
                    )}
                  >
                    {"30"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rm7Vx
                    )}
                  >
                    {"40"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rRcqM
                    )}
                  >
                    {"50"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jXqH
                    )}
                  >
                    {"60"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"graphicMain"}
                  data-plasmic-override={overrides.graphicMain}
                  className={classNames(projectcss.all, sty.graphicMain)}
                >
                  <div
                    data-plasmic-name={"graphicMask"}
                    data-plasmic-override={overrides.graphicMask}
                    className={classNames(projectcss.all, sty.graphicMask)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__uKcFz)}
                      displayHeight={"329.923px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"604.85px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/blank_project/images/maskGroup.svg",
                        fullWidth: 604.85,
                        fullHeight: 329.923,
                        aspectRatio: 1.833333
                      }}
                    />

                    <YesterdayGraphIcon
                      className={classNames(projectcss.all, sty.svg___7BQoD)}
                      role={"img"}
                    />

                    <TodayGraphIcon
                      className={classNames(projectcss.all, sty.svg__vIgKq)}
                      role={"img"}
                    />

                    <div
                      data-plasmic-name={"pointer"}
                      data-plasmic-override={overrides.pointer}
                      className={classNames(projectcss.all, sty.pointer)}
                    >
                      <CirclePointer2Icon
                        className={classNames(projectcss.all, sty.svg___5MdIh)}
                        role={"img"}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__m2Y1Q)}
                        displayHeight={"14px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"14px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/blank_project/images/circlePointer1.svg",
                          fullWidth: 14,
                          fullHeight: 14,
                          aspectRatio: 1
                        }}
                      />

                      <div
                        data-plasmic-name={"value"}
                        data-plasmic-override={overrides.value}
                        className={classNames(projectcss.all, sty.value)}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__yxvhX)}
                          displayHeight={"38px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"66px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/blank_project/images/sheet.svg",
                            fullWidth: 66,
                            fullHeight: 38,
                            aspectRatio: 1.736842
                          }}
                        />

                        <div
                          data-plasmic-name={"pointerValue"}
                          data-plasmic-override={overrides.pointerValue}
                          className={classNames(
                            projectcss.all,
                            sty.pointerValue
                          )}
                        >
                          <div
                            data-plasmic-name={"pointerValue2"}
                            data-plasmic-override={overrides.pointerValue2}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.pointerValue2
                            )}
                          >
                            {"38"}
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <div
                data-plasmic-name={"additionalInfo"}
                data-plasmic-override={overrides.additionalInfo}
                className={classNames(projectcss.all, sty.additionalInfo)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4P6Sm
                  )}
                >
                  {"Resolved"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gTuRg
                  )}
                >
                  {"449"}
                </div>

                <DividerLineVerticalIcon
                  className={classNames(projectcss.all, sty.svg__lcv5P)}
                  role={"img"}
                />

                <DividerLineHorizontal2Icon
                  className={classNames(projectcss.all, sty.svg__rCm1F)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__l55CM
                  )}
                >
                  {"Received"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hF8Kt
                  )}
                >
                  {"426"}
                </div>

                <DividerLineHorizontal2Icon
                  className={classNames(projectcss.all, sty.svg__aRo4)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ggWin
                  )}
                >
                  {"Average first response time"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aR8B
                  )}
                >
                  {"33m"}
                </div>

                <DividerLineHorizontal2Icon
                  className={classNames(projectcss.all, sty.svg___8Nn5N)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__f2LD5
                  )}
                >
                  {"Average response time"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8KIwT
                  )}
                >
                  {"3h 8m"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lQota
                  )}
                >
                  {"Resolution within SLA"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__t3SN1
                  )}
                >
                  {"94%"}
                </div>

                <DividerLineHorizontal2Icon
                  className={classNames(projectcss.all, sty.svg__bFvp)}
                  role={"img"}
                />
              </div>
            </div>

            <div
              data-plasmic-name={"cards"}
              data-plasmic-override={overrides.cards}
              className={classNames(projectcss.all, sty.cards)}
            >
              <div
                data-plasmic-name={"unresolved"}
                data-plasmic-override={overrides.unresolved}
                className={classNames(projectcss.all, sty.unresolved)}
              >
                <div
                  data-plasmic-name={"cardsDefault4"}
                  data-plasmic-override={overrides.cardsDefault4}
                  className={classNames(projectcss.all, sty.cardsDefault4)}
                >
                  <div
                    data-plasmic-name={"sheet8"}
                    data-plasmic-override={overrides.sheet8}
                    className={classNames(projectcss.all, sty.sheet8)}
                  />
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yajNp
                  )}
                >
                  {"Unresolved"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__eIqcX
                  )}
                >
                  {"60"}
                </div>
              </div>

              <div
                data-plasmic-name={"open"}
                data-plasmic-override={overrides.open}
                className={classNames(projectcss.all, sty.open)}
              >
                <div
                  data-plasmic-name={"cardsDefault5"}
                  data-plasmic-override={overrides.cardsDefault5}
                  className={classNames(projectcss.all, sty.cardsDefault5)}
                >
                  <div
                    data-plasmic-name={"sheet9"}
                    data-plasmic-override={overrides.sheet9}
                    className={classNames(projectcss.all, sty.sheet9)}
                  />
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__r31Eu
                  )}
                >
                  {"Open"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5HWe4
                  )}
                >
                  {"43"}
                </div>
              </div>

              <div
                data-plasmic-name={"open2"}
                data-plasmic-override={overrides.open2}
                className={classNames(projectcss.all, sty.open2)}
              >
                <div
                  data-plasmic-name={"cardsDefault6"}
                  data-plasmic-override={overrides.cardsDefault6}
                  className={classNames(projectcss.all, sty.cardsDefault6)}
                >
                  <div
                    data-plasmic-name={"sheet10"}
                    data-plasmic-override={overrides.sheet10}
                    className={classNames(projectcss.all, sty.sheet10)}
                  />
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vP2Dm
                  )}
                >
                  {"On hold"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fOrgK
                  )}
                >
                  {"64"}
                </div>
              </div>

              <div
                data-plasmic-name={"overdue"}
                data-plasmic-override={overrides.overdue}
                className={classNames(projectcss.all, sty.overdue)}
              >
                <div
                  data-plasmic-name={"cardsHover"}
                  data-plasmic-override={overrides.cardsHover}
                  className={classNames(projectcss.all, sty.cardsHover)}
                >
                  <div
                    data-plasmic-name={"stroke"}
                    data-plasmic-override={overrides.stroke}
                    className={classNames(projectcss.all, sty.stroke)}
                  />

                  <div
                    data-plasmic-name={"sheet11"}
                    data-plasmic-override={overrides.sheet11}
                    className={classNames(projectcss.all, sty.sheet11)}
                  />
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8Eb59
                  )}
                >
                  {"Overdue"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zDksl
                  )}
                >
                  {"16"}
                </div>

                <div
                  data-plasmic-name={"iconCursorPointingHand"}
                  data-plasmic-override={overrides.iconCursorPointingHand}
                  className={classNames(
                    projectcss.all,
                    sty.iconCursorPointingHand
                  )}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__v2R7)}
                    displayHeight={"15.268px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"14.308px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/group.svg",
                      fullWidth: 14.308,
                      fullHeight: 15.268,
                      aspectRatio: 0.941176
                    }}
                  />
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"headerDefault"}
              data-plasmic-override={overrides.headerDefault}
              className={classNames(projectcss.all, sty.headerDefault)}
            >
              <div
                data-plasmic-name={"photo"}
                data-plasmic-override={overrides.photo}
                className={classNames(projectcss.all, sty.photo)}
              >
                <div
                  data-plasmic-name={"avatarManHeader"}
                  data-plasmic-override={overrides.avatarManHeader}
                  className={classNames(projectcss.all, sty.avatarManHeader)}
                >
                  <div
                    data-plasmic-name={"mHeader"}
                    data-plasmic-override={overrides.mHeader}
                    className={classNames(projectcss.all, sty.mHeader)}
                  />
                </div>

                <ProfileCircleIcon
                  className={classNames(projectcss.all, sty.svg__to2IU)}
                  role={"img"}
                />
              </div>

              <div
                data-plasmic-name={"name"}
                data-plasmic-override={overrides.name}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.name
                )}
              >
                {"Jones Ferdinand"}
              </div>

              <DividerLineVertical2Icon
                className={classNames(projectcss.all, sty.svg__bd3Sr)}
                role={"img"}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__d0BgV)}
                displayHeight={"16px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"16px" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/blank_project/images/iconNotificationsNew.svg",
                  fullWidth: 16,
                  fullHeight: 16,
                  aspectRatio: 0.947368
                }}
              />

              <div
                data-plasmic-name={"iconSearch"}
                data-plasmic-override={overrides.iconSearch}
                className={classNames(projectcss.all, sty.iconSearch)}
              >
                <SearchIcon
                  className={classNames(projectcss.all, sty.svg__pyJwv)}
                  role={"img"}
                />
              </div>

              <div
                data-plasmic-name={"title7"}
                data-plasmic-override={overrides.title7}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.title7
                )}
              >
                {"Overview"}
              </div>
            </div>

            <div
              data-plasmic-name={"sidebarDesktop"}
              data-plasmic-override={overrides.sidebarDesktop}
              className={classNames(projectcss.all, sty.sidebarDesktop)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__a3LW1
                )}
              >
                {"Dashboard Kit"}
              </div>

              <div
                data-plasmic-name={"sidebarListActive"}
                data-plasmic-override={overrides.sidebarListActive}
                className={classNames(projectcss.all, sty.sidebarListActive)}
              >
                <Sheet2Icon
                  className={classNames(projectcss.all, sty.svg__s15WY)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"selected"}
                  data-plasmic-override={overrides.selected}
                  className={classNames(projectcss.all, sty.selected)}
                />

                <div
                  data-plasmic-name={"title8"}
                  data-plasmic-override={overrides.title8}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title8
                  )}
                >
                  {"Overview"}
                </div>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___14E6Y)}
                  displayHeight={"16px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"16px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/blank_project/images/iconSidebarActive1Overview.svg",
                    fullWidth: 16,
                    fullHeight: 16,
                    aspectRatio: 1
                  }}
                />
              </div>

              <div
                data-plasmic-name={"sidebarListInactive"}
                data-plasmic-override={overrides.sidebarListInactive}
                className={classNames(projectcss.all, sty.sidebarListInactive)}
              >
                <div
                  data-plasmic-name={"title9"}
                  data-plasmic-override={overrides.title9}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title9
                  )}
                >
                  {"Tickets"}
                </div>

                <IconSidebarInactive2TicketsIcon
                  className={classNames(projectcss.all, sty.svg__j7Qfx)}
                  role={"img"}
                />
              </div>

              <div
                data-plasmic-name={"sidebarListInactive2"}
                data-plasmic-override={overrides.sidebarListInactive2}
                className={classNames(projectcss.all, sty.sidebarListInactive2)}
              >
                <div
                  data-plasmic-name={"title10"}
                  data-plasmic-override={overrides.title10}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title10
                  )}
                >
                  {"Ideas"}
                </div>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__jrh2K)}
                  displayHeight={"16px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"16px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/blank_project/images/iconSidebarInactive3Ideas.svg",
                    fullWidth: 16,
                    fullHeight: 16,
                    aspectRatio: 1
                  }}
                />
              </div>

              <div
                data-plasmic-name={"sidebarListInactive3"}
                data-plasmic-override={overrides.sidebarListInactive3}
                className={classNames(projectcss.all, sty.sidebarListInactive3)}
              >
                <div
                  data-plasmic-name={"title11"}
                  data-plasmic-override={overrides.title11}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title11
                  )}
                >
                  {"Contacts"}
                </div>

                <IconSidebarInactive4ContactsIcon
                  className={classNames(projectcss.all, sty.svg__khGgq)}
                  role={"img"}
                />
              </div>

              <div
                data-plasmic-name={"sidebarListInactive4"}
                data-plasmic-override={overrides.sidebarListInactive4}
                className={classNames(projectcss.all, sty.sidebarListInactive4)}
              >
                <div
                  data-plasmic-name={"title12"}
                  data-plasmic-override={overrides.title12}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title12
                  )}
                >
                  {"Agents"}
                </div>

                <IconSidebarInactive5AgentsIcon
                  className={classNames(projectcss.all, sty.svg__kGi)}
                  role={"img"}
                />
              </div>

              <div
                data-plasmic-name={"sidebarListInactive5"}
                data-plasmic-override={overrides.sidebarListInactive5}
                className={classNames(projectcss.all, sty.sidebarListInactive5)}
              >
                <div
                  data-plasmic-name={"title13"}
                  data-plasmic-override={overrides.title13}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title13
                  )}
                >
                  {"Articles"}
                </div>

                <IconSidebarInactive6ArticlesIcon
                  className={classNames(projectcss.all, sty.svg__wdKn9)}
                  role={"img"}
                />
              </div>

              <div
                data-plasmic-name={"sidebarListInactive6"}
                data-plasmic-override={overrides.sidebarListInactive6}
                className={classNames(projectcss.all, sty.sidebarListInactive6)}
              >
                <div
                  data-plasmic-name={"title14"}
                  data-plasmic-override={overrides.title14}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title14
                  )}
                >
                  {"Settings"}
                </div>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___3JPa3)}
                  displayHeight={"16px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"16px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/blank_project/images/iconSidebarInactiveA1Settings.svg",
                    fullWidth: 16,
                    fullHeight: 16,
                    aspectRatio: 1
                  }}
                />
              </div>

              <div
                data-plasmic-name={"sidebarListInactive7"}
                data-plasmic-override={overrides.sidebarListInactive7}
                className={classNames(projectcss.all, sty.sidebarListInactive7)}
              >
                <div
                  data-plasmic-name={"title15"}
                  data-plasmic-override={overrides.title15}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title15
                  )}
                >
                  {"Subscription"}
                </div>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__vf0L)}
                  displayHeight={"16px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"16px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/blank_project/images/iconSidebarInactiveA2Subscription.svg",
                    fullWidth: 16,
                    fullHeight: 16,
                    aspectRatio: 1
                  }}
                />
              </div>

              <DividerLineHorizontal3Icon
                className={classNames(projectcss.all, sty.svg__ynD5R)}
                role={"img"}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__al8F1)}
                displayHeight={"32px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"32px" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/blank_project/images/logo.svg",
                  fullWidth: 32,
                  fullHeight: 32,
                  aspectRatio: 1
                }}
              />
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "_11Overview",
    "ticketsAndTasks",
    "tasks",
    "cardsDefault",
    "sheet",
    "buttonTextButtonPrimaryDefault",
    "taskCreate",
    "iconCreateInactive",
    "sheet2",
    "task2",
    "chipDefaultSuccess",
    "sheet3",
    "title",
    "title2",
    "task1",
    "chipDefaultWarning",
    "sheet4",
    "title3",
    "title4",
    "task3",
    "chipDefaultGray",
    "sheet5",
    "title5",
    "title6",
    "unresolvedTickets",
    "cardsDefault2",
    "sheet6",
    "buttonTextButtonPrimaryDefault2",
    "unresolvedTicket1",
    "unresolvedTicket2",
    "unresolvedTicket3",
    "unresolvedTicket4",
    "todaysTrends",
    "cardsDefault3",
    "sheet7",
    "graphHelp",
    "today",
    "yesterday",
    "fullGraph",
    "horizontalLines",
    "hours",
    "values",
    "graphicMain",
    "graphicMask",
    "pointer",
    "value",
    "pointerValue",
    "pointerValue2",
    "additionalInfo",
    "cards",
    "unresolved",
    "cardsDefault4",
    "sheet8",
    "open",
    "cardsDefault5",
    "sheet9",
    "open2",
    "cardsDefault6",
    "sheet10",
    "overdue",
    "cardsHover",
    "stroke",
    "sheet11",
    "iconCursorPointingHand",
    "headerDefault",
    "photo",
    "avatarManHeader",
    "mHeader",
    "name",
    "iconSearch",
    "title7",
    "sidebarDesktop",
    "sidebarListActive",
    "selected",
    "title8",
    "sidebarListInactive",
    "title9",
    "sidebarListInactive2",
    "title10",
    "sidebarListInactive3",
    "title11",
    "sidebarListInactive4",
    "title12",
    "sidebarListInactive5",
    "title13",
    "sidebarListInactive6",
    "title14",
    "sidebarListInactive7",
    "title15"
  ],
  _11Overview: [
    "_11Overview",
    "ticketsAndTasks",
    "tasks",
    "cardsDefault",
    "sheet",
    "buttonTextButtonPrimaryDefault",
    "taskCreate",
    "iconCreateInactive",
    "sheet2",
    "task2",
    "chipDefaultSuccess",
    "sheet3",
    "title",
    "title2",
    "task1",
    "chipDefaultWarning",
    "sheet4",
    "title3",
    "title4",
    "task3",
    "chipDefaultGray",
    "sheet5",
    "title5",
    "title6",
    "unresolvedTickets",
    "cardsDefault2",
    "sheet6",
    "buttonTextButtonPrimaryDefault2",
    "unresolvedTicket1",
    "unresolvedTicket2",
    "unresolvedTicket3",
    "unresolvedTicket4",
    "todaysTrends",
    "cardsDefault3",
    "sheet7",
    "graphHelp",
    "today",
    "yesterday",
    "fullGraph",
    "horizontalLines",
    "hours",
    "values",
    "graphicMain",
    "graphicMask",
    "pointer",
    "value",
    "pointerValue",
    "pointerValue2",
    "additionalInfo",
    "cards",
    "unresolved",
    "cardsDefault4",
    "sheet8",
    "open",
    "cardsDefault5",
    "sheet9",
    "open2",
    "cardsDefault6",
    "sheet10",
    "overdue",
    "cardsHover",
    "stroke",
    "sheet11",
    "iconCursorPointingHand",
    "headerDefault",
    "photo",
    "avatarManHeader",
    "mHeader",
    "name",
    "iconSearch",
    "title7",
    "sidebarDesktop",
    "sidebarListActive",
    "selected",
    "title8",
    "sidebarListInactive",
    "title9",
    "sidebarListInactive2",
    "title10",
    "sidebarListInactive3",
    "title11",
    "sidebarListInactive4",
    "title12",
    "sidebarListInactive5",
    "title13",
    "sidebarListInactive6",
    "title14",
    "sidebarListInactive7",
    "title15"
  ],
  ticketsAndTasks: [
    "ticketsAndTasks",
    "tasks",
    "cardsDefault",
    "sheet",
    "buttonTextButtonPrimaryDefault",
    "taskCreate",
    "iconCreateInactive",
    "sheet2",
    "task2",
    "chipDefaultSuccess",
    "sheet3",
    "title",
    "title2",
    "task1",
    "chipDefaultWarning",
    "sheet4",
    "title3",
    "title4",
    "task3",
    "chipDefaultGray",
    "sheet5",
    "title5",
    "title6",
    "unresolvedTickets",
    "cardsDefault2",
    "sheet6",
    "buttonTextButtonPrimaryDefault2",
    "unresolvedTicket1",
    "unresolvedTicket2",
    "unresolvedTicket3",
    "unresolvedTicket4"
  ],
  tasks: [
    "tasks",
    "cardsDefault",
    "sheet",
    "buttonTextButtonPrimaryDefault",
    "taskCreate",
    "iconCreateInactive",
    "sheet2",
    "task2",
    "chipDefaultSuccess",
    "sheet3",
    "title",
    "title2",
    "task1",
    "chipDefaultWarning",
    "sheet4",
    "title3",
    "title4",
    "task3",
    "chipDefaultGray",
    "sheet5",
    "title5",
    "title6"
  ],
  cardsDefault: ["cardsDefault", "sheet"],
  sheet: ["sheet"],
  buttonTextButtonPrimaryDefault: ["buttonTextButtonPrimaryDefault"],
  taskCreate: ["taskCreate", "iconCreateInactive", "sheet2"],
  iconCreateInactive: ["iconCreateInactive", "sheet2"],
  sheet2: ["sheet2"],
  task2: ["task2", "chipDefaultSuccess", "sheet3", "title", "title2"],
  chipDefaultSuccess: ["chipDefaultSuccess", "sheet3", "title", "title2"],
  sheet3: ["sheet3"],
  title: ["title", "title2"],
  title2: ["title2"],
  task1: ["task1", "chipDefaultWarning", "sheet4", "title3", "title4"],
  chipDefaultWarning: ["chipDefaultWarning", "sheet4", "title3", "title4"],
  sheet4: ["sheet4"],
  title3: ["title3", "title4"],
  title4: ["title4"],
  task3: ["task3", "chipDefaultGray", "sheet5", "title5", "title6"],
  chipDefaultGray: ["chipDefaultGray", "sheet5", "title5", "title6"],
  sheet5: ["sheet5"],
  title5: ["title5", "title6"],
  title6: ["title6"],
  unresolvedTickets: [
    "unresolvedTickets",
    "cardsDefault2",
    "sheet6",
    "buttonTextButtonPrimaryDefault2",
    "unresolvedTicket1",
    "unresolvedTicket2",
    "unresolvedTicket3",
    "unresolvedTicket4"
  ],
  cardsDefault2: ["cardsDefault2", "sheet6"],
  sheet6: ["sheet6"],
  buttonTextButtonPrimaryDefault2: ["buttonTextButtonPrimaryDefault2"],
  unresolvedTicket1: ["unresolvedTicket1"],
  unresolvedTicket2: ["unresolvedTicket2"],
  unresolvedTicket3: ["unresolvedTicket3"],
  unresolvedTicket4: ["unresolvedTicket4"],
  todaysTrends: [
    "todaysTrends",
    "cardsDefault3",
    "sheet7",
    "graphHelp",
    "today",
    "yesterday",
    "fullGraph",
    "horizontalLines",
    "hours",
    "values",
    "graphicMain",
    "graphicMask",
    "pointer",
    "value",
    "pointerValue",
    "pointerValue2",
    "additionalInfo"
  ],
  cardsDefault3: ["cardsDefault3", "sheet7"],
  sheet7: ["sheet7"],
  graphHelp: ["graphHelp", "today", "yesterday"],
  today: ["today"],
  yesterday: ["yesterday"],
  fullGraph: [
    "fullGraph",
    "horizontalLines",
    "hours",
    "values",
    "graphicMain",
    "graphicMask",
    "pointer",
    "value",
    "pointerValue",
    "pointerValue2"
  ],
  horizontalLines: ["horizontalLines"],
  hours: ["hours"],
  values: ["values"],
  graphicMain: [
    "graphicMain",
    "graphicMask",
    "pointer",
    "value",
    "pointerValue",
    "pointerValue2"
  ],
  graphicMask: [
    "graphicMask",
    "pointer",
    "value",
    "pointerValue",
    "pointerValue2"
  ],
  pointer: ["pointer", "value", "pointerValue", "pointerValue2"],
  value: ["value", "pointerValue", "pointerValue2"],
  pointerValue: ["pointerValue", "pointerValue2"],
  pointerValue2: ["pointerValue2"],
  additionalInfo: ["additionalInfo"],
  cards: [
    "cards",
    "unresolved",
    "cardsDefault4",
    "sheet8",
    "open",
    "cardsDefault5",
    "sheet9",
    "open2",
    "cardsDefault6",
    "sheet10",
    "overdue",
    "cardsHover",
    "stroke",
    "sheet11",
    "iconCursorPointingHand"
  ],
  unresolved: ["unresolved", "cardsDefault4", "sheet8"],
  cardsDefault4: ["cardsDefault4", "sheet8"],
  sheet8: ["sheet8"],
  open: ["open", "cardsDefault5", "sheet9"],
  cardsDefault5: ["cardsDefault5", "sheet9"],
  sheet9: ["sheet9"],
  open2: ["open2", "cardsDefault6", "sheet10"],
  cardsDefault6: ["cardsDefault6", "sheet10"],
  sheet10: ["sheet10"],
  overdue: [
    "overdue",
    "cardsHover",
    "stroke",
    "sheet11",
    "iconCursorPointingHand"
  ],
  cardsHover: ["cardsHover", "stroke", "sheet11"],
  stroke: ["stroke"],
  sheet11: ["sheet11"],
  iconCursorPointingHand: ["iconCursorPointingHand"],
  headerDefault: [
    "headerDefault",
    "photo",
    "avatarManHeader",
    "mHeader",
    "name",
    "iconSearch",
    "title7"
  ],
  photo: ["photo", "avatarManHeader", "mHeader"],
  avatarManHeader: ["avatarManHeader", "mHeader"],
  mHeader: ["mHeader"],
  name: ["name"],
  iconSearch: ["iconSearch"],
  title7: ["title7"],
  sidebarDesktop: [
    "sidebarDesktop",
    "sidebarListActive",
    "selected",
    "title8",
    "sidebarListInactive",
    "title9",
    "sidebarListInactive2",
    "title10",
    "sidebarListInactive3",
    "title11",
    "sidebarListInactive4",
    "title12",
    "sidebarListInactive5",
    "title13",
    "sidebarListInactive6",
    "title14",
    "sidebarListInactive7",
    "title15"
  ],
  sidebarListActive: ["sidebarListActive", "selected", "title8"],
  selected: ["selected"],
  title8: ["title8"],
  sidebarListInactive: ["sidebarListInactive", "title9"],
  title9: ["title9"],
  sidebarListInactive2: ["sidebarListInactive2", "title10"],
  title10: ["title10"],
  sidebarListInactive3: ["sidebarListInactive3", "title11"],
  title11: ["title11"],
  sidebarListInactive4: ["sidebarListInactive4", "title12"],
  title12: ["title12"],
  sidebarListInactive5: ["sidebarListInactive5", "title13"],
  title13: ["title13"],
  sidebarListInactive6: ["sidebarListInactive6", "title14"],
  title14: ["title14"],
  sidebarListInactive7: ["sidebarListInactive7", "title15"],
  title15: ["title15"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  _11Overview: "div";
  ticketsAndTasks: "div";
  tasks: "div";
  cardsDefault: "div";
  sheet: "div";
  buttonTextButtonPrimaryDefault: "div";
  taskCreate: "div";
  iconCreateInactive: "div";
  sheet2: "div";
  task2: "div";
  chipDefaultSuccess: "div";
  sheet3: "div";
  title: "div";
  title2: "div";
  task1: "div";
  chipDefaultWarning: "div";
  sheet4: "div";
  title3: "div";
  title4: "div";
  task3: "div";
  chipDefaultGray: "div";
  sheet5: "div";
  title5: "div";
  title6: "div";
  unresolvedTickets: "div";
  cardsDefault2: "div";
  sheet6: "div";
  buttonTextButtonPrimaryDefault2: "div";
  unresolvedTicket1: "div";
  unresolvedTicket2: "div";
  unresolvedTicket3: "div";
  unresolvedTicket4: "div";
  todaysTrends: "div";
  cardsDefault3: "div";
  sheet7: "div";
  graphHelp: "div";
  today: "div";
  yesterday: "div";
  fullGraph: "div";
  horizontalLines: "div";
  hours: "div";
  values: "div";
  graphicMain: "div";
  graphicMask: "div";
  pointer: "div";
  value: "div";
  pointerValue: "div";
  pointerValue2: "div";
  additionalInfo: "div";
  cards: "div";
  unresolved: "div";
  cardsDefault4: "div";
  sheet8: "div";
  open: "div";
  cardsDefault5: "div";
  sheet9: "div";
  open2: "div";
  cardsDefault6: "div";
  sheet10: "div";
  overdue: "div";
  cardsHover: "div";
  stroke: "div";
  sheet11: "div";
  iconCursorPointingHand: "div";
  headerDefault: "div";
  photo: "div";
  avatarManHeader: "div";
  mHeader: "div";
  name: "div";
  iconSearch: "div";
  title7: "div";
  sidebarDesktop: "div";
  sidebarListActive: "div";
  selected: "div";
  title8: "div";
  sidebarListInactive: "div";
  title9: "div";
  sidebarListInactive2: "div";
  title10: "div";
  sidebarListInactive3: "div";
  title11: "div";
  sidebarListInactive4: "div";
  title12: "div";
  sidebarListInactive5: "div";
  title13: "div";
  sidebarListInactive6: "div";
  title14: "div";
  sidebarListInactive7: "div";
  title15: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    _11Overview: makeNodeComponent("_11Overview"),
    ticketsAndTasks: makeNodeComponent("ticketsAndTasks"),
    tasks: makeNodeComponent("tasks"),
    cardsDefault: makeNodeComponent("cardsDefault"),
    sheet: makeNodeComponent("sheet"),
    buttonTextButtonPrimaryDefault: makeNodeComponent(
      "buttonTextButtonPrimaryDefault"
    ),
    taskCreate: makeNodeComponent("taskCreate"),
    iconCreateInactive: makeNodeComponent("iconCreateInactive"),
    sheet2: makeNodeComponent("sheet2"),
    task2: makeNodeComponent("task2"),
    chipDefaultSuccess: makeNodeComponent("chipDefaultSuccess"),
    sheet3: makeNodeComponent("sheet3"),
    title: makeNodeComponent("title"),
    title2: makeNodeComponent("title2"),
    task1: makeNodeComponent("task1"),
    chipDefaultWarning: makeNodeComponent("chipDefaultWarning"),
    sheet4: makeNodeComponent("sheet4"),
    title3: makeNodeComponent("title3"),
    title4: makeNodeComponent("title4"),
    task3: makeNodeComponent("task3"),
    chipDefaultGray: makeNodeComponent("chipDefaultGray"),
    sheet5: makeNodeComponent("sheet5"),
    title5: makeNodeComponent("title5"),
    title6: makeNodeComponent("title6"),
    unresolvedTickets: makeNodeComponent("unresolvedTickets"),
    cardsDefault2: makeNodeComponent("cardsDefault2"),
    sheet6: makeNodeComponent("sheet6"),
    buttonTextButtonPrimaryDefault2: makeNodeComponent(
      "buttonTextButtonPrimaryDefault2"
    ),
    unresolvedTicket1: makeNodeComponent("unresolvedTicket1"),
    unresolvedTicket2: makeNodeComponent("unresolvedTicket2"),
    unresolvedTicket3: makeNodeComponent("unresolvedTicket3"),
    unresolvedTicket4: makeNodeComponent("unresolvedTicket4"),
    todaysTrends: makeNodeComponent("todaysTrends"),
    cardsDefault3: makeNodeComponent("cardsDefault3"),
    sheet7: makeNodeComponent("sheet7"),
    graphHelp: makeNodeComponent("graphHelp"),
    today: makeNodeComponent("today"),
    yesterday: makeNodeComponent("yesterday"),
    fullGraph: makeNodeComponent("fullGraph"),
    horizontalLines: makeNodeComponent("horizontalLines"),
    hours: makeNodeComponent("hours"),
    values: makeNodeComponent("values"),
    graphicMain: makeNodeComponent("graphicMain"),
    graphicMask: makeNodeComponent("graphicMask"),
    pointer: makeNodeComponent("pointer"),
    value: makeNodeComponent("value"),
    pointerValue: makeNodeComponent("pointerValue"),
    pointerValue2: makeNodeComponent("pointerValue2"),
    additionalInfo: makeNodeComponent("additionalInfo"),
    cards: makeNodeComponent("cards"),
    unresolved: makeNodeComponent("unresolved"),
    cardsDefault4: makeNodeComponent("cardsDefault4"),
    sheet8: makeNodeComponent("sheet8"),
    open: makeNodeComponent("open"),
    cardsDefault5: makeNodeComponent("cardsDefault5"),
    sheet9: makeNodeComponent("sheet9"),
    open2: makeNodeComponent("open2"),
    cardsDefault6: makeNodeComponent("cardsDefault6"),
    sheet10: makeNodeComponent("sheet10"),
    overdue: makeNodeComponent("overdue"),
    cardsHover: makeNodeComponent("cardsHover"),
    stroke: makeNodeComponent("stroke"),
    sheet11: makeNodeComponent("sheet11"),
    iconCursorPointingHand: makeNodeComponent("iconCursorPointingHand"),
    headerDefault: makeNodeComponent("headerDefault"),
    photo: makeNodeComponent("photo"),
    avatarManHeader: makeNodeComponent("avatarManHeader"),
    mHeader: makeNodeComponent("mHeader"),
    _name: makeNodeComponent("name"),
    iconSearch: makeNodeComponent("iconSearch"),
    title7: makeNodeComponent("title7"),
    sidebarDesktop: makeNodeComponent("sidebarDesktop"),
    sidebarListActive: makeNodeComponent("sidebarListActive"),
    selected: makeNodeComponent("selected"),
    title8: makeNodeComponent("title8"),
    sidebarListInactive: makeNodeComponent("sidebarListInactive"),
    title9: makeNodeComponent("title9"),
    sidebarListInactive2: makeNodeComponent("sidebarListInactive2"),
    title10: makeNodeComponent("title10"),
    sidebarListInactive3: makeNodeComponent("sidebarListInactive3"),
    title11: makeNodeComponent("title11"),
    sidebarListInactive4: makeNodeComponent("sidebarListInactive4"),
    title12: makeNodeComponent("title12"),
    sidebarListInactive5: makeNodeComponent("sidebarListInactive5"),
    title13: makeNodeComponent("title13"),
    sidebarListInactive6: makeNodeComponent("sidebarListInactive6"),
    title14: makeNodeComponent("title14"),
    sidebarListInactive7: makeNodeComponent("sidebarListInactive7"),
    title15: makeNodeComponent("title15"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
